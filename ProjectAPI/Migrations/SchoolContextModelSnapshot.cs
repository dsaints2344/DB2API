// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectAPI.Models;

namespace ProjectAPI.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectAPI.Models.TblAlumno", b =>
                {
                    b.Property<int>("IdAlumno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoAlumno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("Date");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("Date");

                    b.Property<string>("NombreAlumno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TblEstadoId")
                        .HasColumnType("int");

                    b.Property<int>("tblRegistroGradoId")
                        .HasColumnType("int");

                    b.HasKey("IdAlumno");

                    b.HasIndex("TblEstadoId")
                        .IsUnique();

                    b.HasIndex("tblRegistroGradoId");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("ProjectAPI.Models.TblEstado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstado");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("ProjectAPI.Models.TblMaestro", b =>
                {
                    b.Property<int>("IdMaestro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoMaestro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreMaestro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMaestro");

                    b.ToTable("Maestros");
                });

            modelBuilder.Entity("ProjectAPI.Models.TblRegistroGrado", b =>
                {
                    b.Property<int>("IdRegistroGrado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Curso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaestroIdMaestro")
                        .HasColumnType("int");

                    b.Property<int>("TblTipoGradoId")
                        .HasColumnType("int");

                    b.HasKey("IdRegistroGrado");

                    b.HasIndex("MaestroIdMaestro");

                    b.HasIndex("TblTipoGradoId")
                        .IsUnique();

                    b.ToTable("RegistroGrados");
                });

            modelBuilder.Entity("ProjectAPI.Models.TblTipoGrado", b =>
                {
                    b.Property<int>("IdTipoGrado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Grado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoGrado");

                    b.ToTable("TipoGrados");
                });

            modelBuilder.Entity("ProjectAPI.Models.TblAlumno", b =>
                {
                    b.HasOne("ProjectAPI.Models.TblEstado", "Estado")
                        .WithOne("Alumno")
                        .HasForeignKey("ProjectAPI.Models.TblAlumno", "TblEstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectAPI.Models.TblRegistroGrado", "RegistroGrado")
                        .WithMany()
                        .HasForeignKey("tblRegistroGradoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectAPI.Models.TblRegistroGrado", b =>
                {
                    b.HasOne("ProjectAPI.Models.TblMaestro", "Maestro")
                        .WithMany("TblRegistroGrados")
                        .HasForeignKey("MaestroIdMaestro");

                    b.HasOne("ProjectAPI.Models.TblTipoGrado", "TipoGrado")
                        .WithOne("RegistroGrado")
                        .HasForeignKey("ProjectAPI.Models.TblRegistroGrado", "TblTipoGradoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
